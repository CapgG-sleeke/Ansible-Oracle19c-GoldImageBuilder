- name: display start golden image message
  remote_user: "{{ root_user }}"
  debug:
    msg:
      - 'Oracle Database Software 19c Installation For Golden Images : Started for Single Instance at {{ansible_date_time.iso8601}}:'

- name: Ensure free space on disk is more than 7.2 GB
  assert:
    that: item.size_available > 7200000000
    msg: "warning: disk space is low"
  when: item.mount == mount_directory
  with_items: "{{ ansible_mounts }}"
  no_log: true

- name: Download Oracle 19c Gold image from server
  get_url:
    validate_certs: no
    url: "{{ goldimage_url }}/{{ goldimage_name }}"
    dest: "{{ stage_dir }}/LINUX.X64_19_db_home.zip"
    mode: '0440'
  tags:
    - download_oracle19c

- name: Unpack Oracle 19c Database Software to the target server
  when: inventory_hostname in groups['dbservers']
  remote_user: "{{ root_user }}"
  become: yes
  become_user: "{{ oracle_user }}"
  unarchive:
     src={{ stage_dir }}/LINUX.X64_19_db_home.zip
     dest="{{ oracle_home }}"
     remote_src=no
     mode=0750
     group="{{ oracle_install_group }}"
     owner="{{ oracle_user }}"
  tags:
   - db19c_unpackdbsoftware

- name: Remove 19c RDBMS Installation zip
  when: inventory_hostname in groups['dbservers']
  remote_user: "{{ root_user }}"
  ansible.builtin.file:
    path: "{{ stage_dir }}/LINUX.X64_19_db_home.zip"
    state: absent

- name: Depploy Oracle 19c Gold Image nse file
  when: inventory_hostname in groups['dbservers']
  remote_user: "{{ root_user }}"
  become: yes
  become_user: "{{ oracle_user }}"
  template: src=roles/dbsoftware19c_install/templates/{{ oradbsoft_rsp }}.rsp.j2 dest={{ stage_dir }}/{{ oradbsoft_rsp }}.rsp mode=0755
  tags:
   - db19c_setuprspfile

- name: Deploy Oracle 19c Database Gold Image
  when: inventory_hostname in groups['dbservers']
  remote_user: "{{ root_user }}"
  become: yes
  become_user: "{{ oracle_user }}"
  shell: "export CV_ASSUME_DISTID=OEL7.8; {{ oracle_home }}/runInstaller -silent -debug -force -noconfig -ignorePrereqFailure oracle.install.option=INSTALL_DB_SWONLY UNIX_GROUP_NAME=dba ORACLE_HOME={{ oracle_home }} ORACLE_BASE={{ oracle_base }} oracle.install.db.InstallEdition=EE oracle.install.db.DBA_GROUP=oinstall oracle.install.db.OPER_GROUP=oper oracle.install.db.OSBACKUPDBA_GROUP=backupdba oracle.install.db.OSDGDBA_GROUP=dgdba oracle.install.db.OSKMDBA_GROUP=kmdba oracle.install.db.OSRACDBA_GROUP=racdba DECLINE_SECURITY_UPDATES=true"
  register:
      _gold_deploy_output
  ignore_errors: True
  tags:
   - dbsoft19c_gold_deploy

     ##- name: show the report_string
     ##debug:
     ##msg: |
     ##"{{ _gold_deploy_output }}"

- name: Execute orainstroot.sh
  when: inventory_hostname in groups['dbservers']
  remote_user: "{{ root_user }}"
  shell: "{{ oracle_inventory }}/orainstRoot.sh"
  ignore_errors: True
  tags:
   - db19c_exeorainstroot


- name: Execute root.sh
  when: inventory_hostname in groups['dbservers']
  remote_user: "{{ root_user }}"
  shell: "{{ oracle_home }}/root.sh -silent"
  tags:
   - db19c_exeroot

- name: display post install message
  debug:
    msg:
      - 'This Steps completed below task for Single Instance at {{ansible_date_time.iso8601}}:'
      - '- Install Single Instance Oracle Database Software'
      - 'Next Steps left to do:'
      - '- Create SI empty Container Database on server ora-x1'
      - '- Create SI Pluggable Database on server ora-x1'
      - '- Deinstall Single Instance Oracle Database Software'
      - '- END OF ALL: git clone of OracleDBAwithAnsible repository will be shared'
